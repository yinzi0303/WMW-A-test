# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
library(dplyr)
data = bind_rows(dataeqt)
data$num = c(rep(1:10,10))
delta_statues = c(delta4 = '\u03B1\u005Fx=\u03B1\u005Fy=0.5')
# library(RColorBrewer)
# colors=brewer.pal(name="Set3",8)
p3=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Type I error rate (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
library(dplyr)
data = bind_rows(dataueqt)
data$num = c(rep(1:10,10))
delta_statues = c(delta4 = c(paste('\u03B1\u005Fx=','\u03B1\u005Fy=',0.5)))
p4=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Type I error rate (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
pp1 = p1+labs(tag = "A")+theme(text = element_text(family = "serif"))
pp2 = p2+labs(tag = "B")+theme(text = element_text(family = "serif"))
pp3 = p3+labs(tag = "C")+theme(text = element_text(family = "serif"))
pp4 = p4+labs(tag = "D")+theme(text = element_text(family = "serif"))
library(ggpubr)
ggarrange(pp1,pp3,pp2,pp4,common.legend = T,legend = "bottom",widths = c(4,1.3))
p4=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Type I error rate (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF8888FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
p4
pp4 = p4+labs(tag = "D")+theme(text = element_text(family = "serif"))
library(ggpubr)
ggarrange(pp1,pp3,pp2,pp4,common.legend = T,legend = "bottom",widths = c(4,1.3))
setwd("C:/Users/dell/Desktop/wmwa/WMWA-R/NB")
Data1 = readRDS("data_nb1_eq.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result1 = readRDS('result_NB1_eq.rds')
result1_2 = readRDS('result_NB1_eq_comp.rds')
result1_3 = readRDS('result_NB1_eqg.rds')
data1 = data_plot(result1, result1_2, result1_3, d=4, para)
data2 = data_plot(result1, result1_2, result1_3, d=3, para)
data3 = data_plot(result1, result1_2, result1_3, d=2, para)
data4 = data_plot(result1, result1_2, result1_3, d=1, para)
Data1 = readRDS("data_nb1_ueq.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result2 = readRDS('result_NB1_ueq.rds')
result2_2 = readRDS('result_NB1_ueq_comp.rds')
result2_3 = readRDS('result_NB1_ueqg.rds')
data5 = data_plot(result2, result2_2, result2_3, d=4, para)
data6 = data_plot(result2, result2_2, result2_3, d=3, para)
data7 = data_plot(result2, result2_2, result2_3, d=2, para)
data8 = data_plot(result2, result2_2, result2_3, d=1, para)
Data1 = readRDS("data_nb1_eqt.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result1 = readRDS('result_NB1_eqt.rds')
result1_2 = readRDS('result_NB1_eqt_comp.rds')
result1_3 = readRDS('result_NB1_eqtg.rds')
dataeqt = data_plot(result1, result1_2, result1_3, d=1, para)
Data1 = readRDS("data_nb1_ueqt.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result2 = readRDS('result_NB1_ueqt.rds')
result2_2 = readRDS('result_NB1_ueqt_comp.rds')
result2_3 = readRDS('result_NB1_ueqtg.rds')
dataueqt = data_plot(result2, result2_2, result2_3, d=1, para)
library(dplyr)
data_1 = bind_rows(data1,data2,data3,data4)
data_1$num = c(rep(1:10,40))
delta_statues = c(delta1 = c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.48,sep = "="),sep=",")),
delta2=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.45,sep = "="),sep=",")),
delta3=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.42,sep = "="),sep=",")),
delta4=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.4,sep = "="),sep=","))
)
p1=ggplot(data = data_1,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Power (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF8888FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
# legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
p1
p1=ggplot(data = data_1,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Power (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FFCD00FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
# legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
p1
setwd("C:/Users/dell/Desktop/wmwa/WMWA-R/NB")
Data1 = readRDS("data_nb1_eq.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result1 = readRDS('result_NB1_eq.rds')
result1_2 = readRDS('result_NB1_eq_comp.rds')
result1_3 = readRDS('result_NB1_eqg.rds')
data1 = data_plot(result1, result1_2, result1_3, d=4, para)
data2 = data_plot(result1, result1_2, result1_3, d=3, para)
data3 = data_plot(result1, result1_2, result1_3, d=2, para)
data4 = data_plot(result1, result1_2, result1_3, d=1, para)
Data1 = readRDS("data_nb1_ueq.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result2 = readRDS('result_NB1_ueq.rds')
result2_2 = readRDS('result_NB1_ueq_comp.rds')
result2_3 = readRDS('result_NB1_ueqg.rds')
data5 = data_plot(result2, result2_2, result2_3, d=4, para)
data6 = data_plot(result2, result2_2, result2_3, d=3, para)
data7 = data_plot(result2, result2_2, result2_3, d=2, para)
data8 = data_plot(result2, result2_2, result2_3, d=1, para)
Data1 = readRDS("data_nb1_eqt.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result1 = readRDS('result_NB1_eqt.rds')
result1_2 = readRDS('result_NB1_eqt_comp.rds')
result1_3 = readRDS('result_NB1_eqtg.rds')
dataeqt = data_plot(result1, result1_2, result1_3, d=1, para)
Data1 = readRDS("data_nb1_ueqt.rds")
M = Data1[["M"]]
N = Data1[["N"]]
alphax = Data1[["alphax"]]
Alphay = Data1[["Alphay"]]
beta = Data1[["beta"]]
Times = Data1[["Times"]]
para = list(M=M, N=N, alphax=alphax, Alphay=Alphay, beta=beta, Times=Times)
result2 = readRDS('result_NB1_ueqt.rds')
result2_2 = readRDS('result_NB1_ueqt_comp.rds')
result2_3 = readRDS('result_NB1_ueqtg.rds')
dataueqt = data_plot(result2, result2_2, result2_3, d=1, para)
library(dplyr)
data_1 = bind_rows(data1,data2,data3,data4)
data_1$num = c(rep(1:10,40))
delta_statues = c(delta1 = c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.48,sep = "="),sep=",")),
delta2=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.45,sep = "="),sep=",")),
delta3=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.42,sep = "="),sep=",")),
delta4=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.4,sep = "="),sep=","))
)
p1=ggplot(data = data_1,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Power (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
# legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
library(dplyr)
data = bind_rows(data5,data6,data7,data8)
data$num = c(rep(1:10,40))
delta_statues = c(delta1 = c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.48,sep = "="),sep=",")),
delta2=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.45,sep = "="),sep=",")),
delta3=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.42,sep = "="),sep=",")),
delta4=c(paste(paste('\u03B1\u005Fx',alphax,sep = "="),paste('\u03B1\u005Fy',0.4,sep = "="),sep=","))
)
p2=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Power (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
library(dplyr)
data = bind_rows(dataeqt)
data$num = c(rep(1:10,10))
delta_statues = c(delta4 = '\u03B1\u005Fx=\u03B1\u005Fy=0.5')
# library(RColorBrewer)
# colors=brewer.pal(name="Set3",8)
p3=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Type I error rate (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
library(dplyr)
data = bind_rows(dataueqt)
data$num = c(rep(1:10,10))
delta_statues = c(delta4 = c(paste('\u03B1\u005Fx=','\u03B1\u005Fy=',0.5)))
p4=ggplot(data = data,aes(x=n,y=Power,group = Methods,color=Methods))+#,shape=Methods
geom_point(size=0.9)+
geom_line()+#aes(linetype=Methods, color=Methods)
labs(x="n", y="Type I error rate (Negative Binomial distribution)", title="")+
ylim(0,1)+facet_grid(type~delta,scales="free",switch="y",labeller = labeller(delta=delta_statues))+
# xlab("n")+#横坐标名称
# ylab("Power")+#纵坐标名称
theme_bw() +#去掉背景灰色
# scale_x_continuous(breaks=seq(0, 10, 2))+
scale_color_manual(values = c("#FFCD00FF","#FF0000FF","#F8766D", "#CD9600", "#7CAE00",
"#00BE67", "#00A9FF", "#8787FFFF", "#C77CFF", "#FF61CC"))+
# scale_color_brewer(palette = "Dark2")+
# scale_linetype_manual(values = c("twodash","twodash","twodash","twodash","twodash","solid","solid","solid"))+
# scale_shape_manual(values = c(20,13,1,2,3,4,5,6))+
# theme_set(theme_bw(base_size = 20, base_line_size = 3/lwd_pt, base_rect_size = 3/lwd_pt))+
theme(
plot.title = element_text(hjust = 0.5),
# panel.grid.major=element_line(colour=NA),
# panel.background = element_rect(fill = "transparent",colour = NA),
# plot.background = element_rect(fill = "transparent",colour = NA),
# panel.grid.minor = element_blank(),#以上theme中代码用于去除网格线且保留坐标轴边框
text = element_text(family = "serif"),#设置中文字体的显示
# axis.text.x = element_blank(),
# legend.position = c(.9,.2),#更改图例的位置，放至图内部的左上角
# legend.position = "none",
# legend.title=element_blank(),
legend.position = "None",
axis.text = element_text(face = 'bold',size=10),
axis.title=element_text(face = 'bold',size=10),
strip.text=element_text(face = 'bold',size=10),
legend.text = element_text(face = 'bold',size=10),
legend.title = element_text(face = 'bold',size=10)
# legend.box.background = element_rect(color="black"))#为图例田间边框线
# legend.box.background = element_rect(fill=NA,color = "black",linetype = 1)
)
# install.packages("ggsci")
# library(ggsci)
# show_col(pal_ucscgb()(26))
pp1 = p1+labs(tag = "A")+theme(text = element_text(family = "serif"))
pp2 = p2+labs(tag = "B")+theme(text = element_text(family = "serif"))
pp3 = p3+labs(tag = "C")+theme(text = element_text(family = "serif"))
pp4 = p4+labs(tag = "D")+theme(text = element_text(family = "serif"))
ggarrange(pp1,pp3,pp2,pp4,common.legend = T,legend = "bottom",widths = c(4,1.3))
ggsave("C:/Users/dell/Desktop/wmwa/Z/lunwen_1g/Rfig/NB_powert1_fig.png",width = 14,height =7.6)
